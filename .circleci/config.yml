version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14.18
    steps:
      - run: curl -f https://get.pnpm.io/v6.16.js | sudo node - add --global pnpm@6
      - run: pnpm config set store-dir .pnpm-store
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run: pnpm i
      - save_cache:
              key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
              paths:
                - node_modules
      - run: pnpm build
      - persist_to_workspace:
          root: .
          paths: ['dist']
  test:
    docker:
      - image: circleci/node:14.18
      - image: circleci/postgres:13.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
      - image: circleci/redis:6.2.6-alpine3.14
    steps:
      - run: curl -f https://get.pnpm.io/v6.16.js | sudo node - add --global pnpm@6
      - run: pnpm config set store-dir .pnpm-store
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
            - v1-deps-
      - run: pnpm i
      - save_cache:
              key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
              paths:
                - node_modules
      - attach_workspace:
          at: .
      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1
      - run: sudo psql -p 5432 -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
      - run:
          name: Run migrations
          command: pnpm typeorm:run
          environment:
            DATABASE_URL: postgres://postgres:postgres@127.0.0.1/postgres

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
